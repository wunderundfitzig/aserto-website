name: deploy to production (aserto.de)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install npm dependencies
        run: npm ci

      - name: Run build task
        run: npm run build

      - name: Copy htaccess file
        run: mv .htaccess out/htaccess

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ github.token }}'
          production_environment: true
          environment: website/production

      - name: Deploy to Server
        uses: mdallasanta/ssh-scp-deploy@v1.0.4
        with:
          local: './out/*'
          remote: '~/www/asertoWeb/'
          host: ${{secrets.DEPLOY_HOST}}
          port: ${{secrets.DEPLOY_PORT}}
          user: ${{secrets.DEPLOY_USERNAME}}
          password: ${{secrets.DEPLOY_PASSWORD}}
          pre_upload: rm -r ~/www/asertoWeb/*
          post_upload: mv ~/www/asertoWeb/htaccess ~/www/asertoWeb/.htaccess

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: '${{ github.token }}'
          state: 'success'
          environment_url: 'https://aserto.de'
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: '${{ github.token }}'
          state: 'failure'
          environment_url: 'https://aserto.de'
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
